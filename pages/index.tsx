import {
  ActionIcon,
  Center,
  Group,
  Input,
  Text,
  UnstyledButton,
} from "@mantine/core";
import dayjs from "dayjs";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import Sub from "../components/Sub";
import User from "../components/User";
import { useSubcriptions } from "../hooks/useSubcriptions";
import { ISubscription } from "../typings/Subscriptions";

const Home: NextPage = () => {
  const router = useRouter();

  const { subscriptions } = useSubcriptions({});

  const [query, setQuery] = useState("");

  const getTimestampFromNextPayment = (s: ISubscription) => {
    let iterator = s.firstPayment;
    const now = dayjs(new Date());

    while (iterator.isBefore(now)) {
      iterator = iterator.add(s.recurrenceCount, s.recurrenceType);
    }

    return now.diff(iterator);
  };

  const filteredSubcriptions = subscriptions
    .filter((s) => s.label.toLowerCase().includes(query.toLowerCase()))
    .sort(
      (a, b) => getTimestampFromNextPayment(b) - getTimestampFromNextPayment(a)
    );

  const handleCreate = () => {
    router.push("/create");
  };

  return (
    <div>
      <Head>
        <title>Subiby</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main style={{ padding: 10 }}>
        <User />
        <h2 style={{ marginLeft: 10, marginTop: 20 }}>Bienvenue</h2>
        <UnstyledButton
          style={{ marginLeft: 10, marginBottom: 20 }}
          onClick={handleCreate}
        >
          <Group>
            <ActionIcon color="violet" variant="light" size="lg">
              +
            </ActionIcon>
            <Text color="violet">Nouvelle souscription</Text>
          </Group>
        </UnstyledButton>
        <Input
          variant="filled"
          placeholder="Rechercher..."
          radius="xl"
          size="md"
          style={{ margin: 10 }}
          type="search"
          value={query}
          onChange={(e: any) => setQuery(e.target.value)}
        />
        <div style={{ display: "flex", flexWrap: "wrap" }}>
          {filteredSubcriptions.map((s) => (
            <Sub key={s.id} sub={s} />
          ))}
        </div>
        {filteredSubcriptions.length === 0 && (
          <Center style={{ minHeight: "30vh" }}>
            <UnstyledButton onClick={handleCreate}>
              <Text color="blue" style={{ textDecoration: "underline" }}>
                Ajouter une souscription
              </Text>
            </UnstyledButton>
          </Center>
        )}
      </main>
    </div>
  );
};

export default Home;
